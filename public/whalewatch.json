// Load Whale Meter
fetch('whales.json')
  .then(res => res.json())
  .then(data => {
    const calls = data.whale_trades.filter(t => t.type === 'CALL').reduce((acc, t) => acc + t.premium, 0);
    const puts = data.whale_trades.filter(t => t.type === 'PUT').reduce((acc, t) => acc + t.premium, 0);
    const total = calls + puts;
    const sentiment = total === 0 ? 'Mixed' : calls > puts ? 'Bullish' : 'Bearish';
    const whaleMeterBar = document.getElementById('whale-meter-bar');
    const whaleMeterText = document.getElementById('whale-sentiment');
    const premiumTotal = document.getElementById('whale-premium-total');

    if (whaleMeterBar && whaleMeterText && premiumTotal) {
      whaleMeterBar.style.background = `linear-gradient(to right, green ${calls / total * 100}%, red ${puts / total * 100}%)`;
      whaleMeterText.innerText = `Whale Sentiment: ${sentiment}`;
      premiumTotal.innerText = `Total Premium Traded: $${total.toLocaleString()}`;
    }
  });

// Load Sentiment Timeline
fetch('sentiment.json')
  .then(res => res.json())
  .then(data => {
    const latest = data.sentiment_timeline[data.sentiment_timeline.length - 1];
    const bar = document.getElementById('sentiment-bar');
    const text = document.getElementById('sentiment-text');

    if (bar && text) {
      bar.style.background = `linear-gradient(to right, #00ffcc ${latest.bullish_pct}%, #002b3f ${latest.bearish_pct}%)`;
      text.innerText = `üêÇ Bullish: ${latest.bullish_pct}% | üêΩ Bearish: ${latest.bearish_pct}%`;
    }
  });

// Load Shark Meter and Alerts
fetch('sharks.json')
  .then(res => res.json())
  .then(data => {
    const sharkMeter = document.getElementById('shark-meter');
    const sharkAlerts = document.getElementById('shark-alerts');

    if (sharkMeter && data.shark_trades && Array.isArray(data.shark_trades)) {
      sharkMeter.innerHTML = data.shark_trades.map(trade => `
        <div class="shark-trade">
          <strong>${trade.symbol}</strong>: ${trade.total_volume.toLocaleString()} shares @ $${trade.average_price} (Confidence: ${trade.confidence})
        </div>
      `).join('');
    }

    if (sharkAlerts && data.shark_alerts && Array.isArray(data.shark_alerts)) {
      sharkAlerts.innerHTML = data.shark_alerts.map(alert => `
        <div class="shark-alert">
          ‚ö†Ô∏è <strong>${alert.symbol}</strong> triggered alert ‚Äî <em>${alert.reason}</em>
        </div>
      `).join('');
    }
  });

// Load Whale Symbols by Premium
fetch('whales.json')
  .then(res => res.json())
  .then(data => {
    const list = document.getElementById('whale-symbols');
    if (list) {
      const premiumMap = {};
      data.whale_trades.forEach(t => {
        if (!premiumMap[t.symbol]) premiumMap[t.symbol] = 0;
        premiumMap[t.symbol] += t.premium;
      });

      const sorted = Object.entries(premiumMap)
        .sort((a, b) => b[1] - a[1])
        .slice(0, 10);

      list.innerHTML = sorted.map(([sym, amt]) => `<li><strong>${sym}</strong>: $${amt.toLocaleString()}</li>`).join('');
    }
  });

// WhaleBot Panel Logic
document.addEventListener('DOMContentLoaded', () => {
  const icon = document.getElementById('whalebot-icon');
  const panel = document.getElementById('whalebotPanel');
  if (icon && panel) {
    icon.onclick = () => {
      panel.style.display = panel.style.display === 'block' ? 'none' : 'block';
    };
  }
});
